---
import { type CollectionEntry, getEntry } from "astro:content";
import { ViewTransitions } from "astro:transitions";
import BaseLayout from "../layouts/BaseLayout.astro";
import AuthorCard from "../components/AuthorCard.astro";
import Section from "../components/Section.astro";
import FormattedDate from "../components/FormattedDate.astro";

interface Props {
  blog: CollectionEntry<"blog">;
  next?: CollectionEntry<"blog">;
  prev?: CollectionEntry<"blog">;
}

const { blog, next, prev } = Astro.props as Props;

const author = await getEntry("organizers", blog.data.author);

const blogTitle = `JSHeroes | ${blog.data.title}`;
---

<BaseLayout title={blogTitle}>
  <img
    class="header-image"
    src={"/img/banners/default-with-bear.svg"}
    aria-hidden
  />

  <main id="main">
    <Section variant="light" content="list">
      <div>
        <header>
          <dl class="space-y-10">
            <dt class="sr-only">Published on</dt>
            <dd>
              <FormattedDate date={blog.data.published} />
            </dd>
          </dl>
          <h1>{blog.data.title}</h1>
        </header>
      </div>
      <div class="content">
        <div class="left">
          {author && <AuthorCard author={author} />}

          {
            (next || prev) && (
              <div>
                {prev && (
                  <div>
                    <a>Previous Article</a>
                    <div>
                      <a href={`/blog/${prev.slug}`}>{prev.data.title}</a>
                    </div>
                  </div>
                )}
                {next && (
                  <div>
                    <a>Next Article</a>
                    <div>
                      <a href={`/blog/${next.slug}`}>{next.data.title}</a>
                    </div>
                  </div>
                )}
              </div>
            )
          }
        </div>
        <div>
          <slot />
        </div>
      </div>
    </Section>
    <ViewTransitions />
  </main>
</BaseLayout>

<style>
  header {
    text-align: center;
    padding-bottom: 1.5rem;
  }

  .content {
    display: flex;
    gap: 2rem;

    .left {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }
  }

  .header-image {
    display: block;
    width: 100%;
    height: 500px;
    object-fit: cover;
  }

  main {
    /* header + footer */
    min-height: calc(100vh - 500px - 400px);
    position: relative;
  }

  :global(h1) {
    font-size: 2rem !important;
  }
</style>
