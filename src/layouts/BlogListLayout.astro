---
import { type Page, type CollectionEntry, getCollection } from "astro:content";
import BaseLayout from "../layouts/BaseLayout.astro";
import Section from "../components/Section.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { ViewTransitions } from "astro:transitions";

interface Props {
  title: string;
  description?: string;
  page: Page<CollectionEntry<"blog">[]>;
}

const posts = await getCollection("blog");
const tags = await getCollection("tags").then((tags) => {
  const tagsWithBlogs = tags.filter((tag) =>
    posts.some((post) =>
      post.data.tags.some((postTag) => postTag.slug === tag.slug)
    )
  );
  return tagsWithBlogs;
});

function tagCount(slug: (typeof CollectionEntry<"tags">)["slug"]) {
  return posts.filter((post) => post.data.tags.some((tag) => tag.slug === slug))
    .length;
}

const { page, title } = Astro.props;
const isBlogPage = Astro.url.pathname === "/blog";
const hasDefaultSlot = Astro.slots.has("default");
---

<BaseLayout title="`JSHeroes | Blogs">
  <img
    class="header-image"
    src={"/img/banners/default-with-bear.svg"}
    aria-hidden
  />

  <main id="main">
    <Section variant="light" content="list">
      <div>
        <h1>{title}</h1>
        {
          hasDefaultSlot && (
            <div>
              <slot />
            </div>
          )
        }
      </div>

      <div class="blog-content">
        <div class="tags-navigation">
          <div>
            {isBlogPage ? <h3>All Posts</h3> : <a href="/blog">All Posts</a>}
          </div>

          <ul>
            {
              tags.map(({ slug, data: { name } }) => (
                <li>
                  <a href={`/tags/${slug}`}>
                    {name} ({tagCount(slug)})
                  </a>
                </li>
              ))
            }
          </ul>
        </div>
        <div class="blog-list">
          <ul>
            {
              page.data.map(
                ({
                  slug,
                  data: { published, title, summary, tags },
                }: CollectionEntry<"blog">) => (
                  <li class="blog">
                    <article>
                      <dl>
                        <dt class="sr-only">Published on</dt>
                        <dd>
                          <FormattedDate date={published} />
                        </dd>
                      </dl>
                      <div>
                        <div>
                          <h3>
                            <a href={`/blog/${slug}`}>{title}</a>
                          </h3>
                        </div>
                        <div class="summary">{summary}</div>
                      </div>
                    </article>
                  </li>
                )
              )
            }
          </ul>
        </div>
      </div>
    </Section>
    <ViewTransitions />
  </main>
</BaseLayout>

<style>
  ul {
    list-style: none;
  }
  .blog-content {
    display: flex;
    gap: 2rem;
  }

  .blog-list {
    & ul {
      padding: 0;
      margin: 0;
      list-style: none;
    }
  }

  .tags-navigation {
    min-width: 280px;
  }

  .blog {
    padding: 1.25rem 0;
    list-style: none;

    .summary {
      margin-top: 0.5rem;
    }

    & article {
      display: flex;
      flex-direction: column;
    }

    & h3,
    dl,
    dd {
      margin: 0;
    }
  }

  .header-image {
    display: block;
    width: 100%;
    height: 500px;
    object-fit: cover;
  }

  main {
    /* header + footer */
    min-height: calc(100vh - 500px - 400px);
    position: relative;
  }

  :global(h1) {
    font-size: 2rem !important;
  }
</style>
